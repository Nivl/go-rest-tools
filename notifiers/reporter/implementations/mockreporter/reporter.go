// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nivl/go-rest-tools/notifiers/reporter (interfaces: Reporter)

// Package mockreporter is a generated GoMock package.
package mockreporter

import (
	auth "github.com/Nivl/go-rest-tools/security/auth"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockReporter is a mock of Reporter interface
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
}

// MockReporterMockRecorder is the mock recorder for MockReporter
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// AddTag mocks base method
func (m *MockReporter) AddTag(arg0, arg1 string) {
	m.ctrl.Call(m, "AddTag", arg0, arg1)
}

// AddTag indicates an expected call of AddTag
func (mr *MockReporterMockRecorder) AddTag(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTag", reflect.TypeOf((*MockReporter)(nil).AddTag), arg0, arg1)
}

// AddTags mocks base method
func (m *MockReporter) AddTags(arg0 map[string]string) {
	m.ctrl.Call(m, "AddTags", arg0)
}

// AddTags indicates an expected call of AddTags
func (mr *MockReporterMockRecorder) AddTags(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTags", reflect.TypeOf((*MockReporter)(nil).AddTags), arg0)
}

// ReportError mocks base method
func (m *MockReporter) ReportError(arg0 error) {
	m.ctrl.Call(m, "ReportError", arg0)
}

// ReportError indicates an expected call of ReportError
func (mr *MockReporterMockRecorder) ReportError(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportError", reflect.TypeOf((*MockReporter)(nil).ReportError), arg0)
}

// ReportErrorAndWait mocks base method
func (m *MockReporter) ReportErrorAndWait(arg0 error) {
	m.ctrl.Call(m, "ReportErrorAndWait", arg0)
}

// ReportErrorAndWait indicates an expected call of ReportErrorAndWait
func (mr *MockReporterMockRecorder) ReportErrorAndWait(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportErrorAndWait", reflect.TypeOf((*MockReporter)(nil).ReportErrorAndWait), arg0)
}

// SetUser mocks base method
func (m *MockReporter) SetUser(arg0 *auth.User) {
	m.ctrl.Call(m, "SetUser", arg0)
}

// SetUser indicates an expected call of SetUser
func (mr *MockReporterMockRecorder) SetUser(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUser", reflect.TypeOf((*MockReporter)(nil).SetUser), arg0)
}
