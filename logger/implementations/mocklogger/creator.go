// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nivl/go-rest-tools/logger (interfaces: Creator)

// Package mocklogger is a generated GoMock package.
package mocklogger

import (
	logger "github.com/Nivl/go-rest-tools/logger"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCreator is a mock of Creator interface
type MockCreator struct {
	ctrl     *gomock.Controller
	recorder *MockCreatorMockRecorder
}

// MockCreatorMockRecorder is the mock recorder for MockCreator
type MockCreatorMockRecorder struct {
	mock *MockCreator
}

// NewMockCreator creates a new mock instance
func NewMockCreator(ctrl *gomock.Controller) *MockCreator {
	mock := &MockCreator{ctrl: ctrl}
	mock.recorder = &MockCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCreator) EXPECT() *MockCreatorMockRecorder {
	return m.recorder
}

// New mocks base method
func (m *MockCreator) New() (logger.Logger, error) {
	ret := m.ctrl.Call(m, "New")
	ret0, _ := ret[0].(logger.Logger)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// New indicates an expected call of New
func (mr *MockCreatorMockRecorder) New() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockCreator)(nil).New))
}
