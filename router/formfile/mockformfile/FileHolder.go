// Code generated by mockery v1.0.0
package mockformfile

import mock "github.com/stretchr/testify/mock"
import multipart "mime/multipart"

// FileHolder is an autogenerated mock type for the FileHolder type
type FileHolder struct {
	mock.Mock
}

// FormFile provides a mock function with given fields: key
func (_m *FileHolder) FormFile(key string) (multipart.File, *multipart.FileHeader, error) {
	ret := _m.Called(key)

	var r0 multipart.File
	if rf, ok := ret.Get(0).(func(string) multipart.File); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(multipart.File)
		}
	}

	var r1 *multipart.FileHeader
	if rf, ok := ret.Get(1).(func(string) *multipart.FileHeader); ok {
		r1 = rf(key)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*multipart.FileHeader)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(key)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
